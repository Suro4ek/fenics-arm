#!/usr/bin/env bash

#----------------- Feel free to edit below ---------------------------#
# Basic settings
VERSION=stable-ppa    # Valid choices are: stable-ppa, dev-env, dev
GUI=true              # Enable gui? true/false
PERSISTENT=false      # Is the container persistent? true/false

# Shared directories.
# Format    -v HOST_PATH:CONTAINER_PATH \
SHAREDDIRS="-v $PWD/shared:/home/fenics/shared \
            -v $PWD/build:/home/fenics/build \
           "

# Advanced settings
IMAGE=fenicsproject/$VERSION    # Name of the docker image to use
CONTAINERNAME="fenics-$VERSION" # Default name of the container

#------- Do not edit below unless you know what you are doing --------#

# Tell script to exit on first error
trap 'exit' ERR

# Test if docker is installed
if ! hash docker 2>/dev/null; then
    echo >&2 "Command 'docker' cannot be found on your system. "
    echo >&2 "Instructions for installing docker on most platforms can be found at:"
    echo >&2 "          https://docs.docker.com/"
    echo >&2 "Aborting."
    exit 1
fi

# Delete the container after use if not persistent
if [ "$PERSISTENT" == "true" ]; then
    RM=""
else
    RM="--rm"
fi

start_gui () {
    # If we are on Mac OS X and using boot2docker we need to use the
    # following workaround from
    # https://github.com/docker/docker/issues/8710 to get X11
    # forwarding to work.
    if [ "$(uname)" == "Darwin" ]; then
	if hash socat 2> /dev/null ; then
	    # I delibrately haven't sunk the output of socat until we
	    # understand more about this.
	    DISPLAY_ENV=$(boot2docker config | grep HostIP | awk -F \" '{print $2}'):0
	    socat TCP-LISTEN:6000,reuseaddr,fork,bind=$DISPLAY_ENV UNIX-CLIENT:\"$DISPLAY\" &
	    echo >&2 "Warning: X11 forwarding on Mac OS X is considered experimental!"
        else
	    echo >&2 "Command 'socat' cannot be found on your system."
	    echo >&2 "socat is required for X11 forwarding to work on Mac OS X."
	    echo >&2 "Homebrew users can install socat by running:"
	    echo >&2 "        brew install socat"
	    echo >&2 "You can run this script without X11 by not passing the -gui option."
	    echo >&2 "Aborting."
	    exit 1
	fi
    else
        DISPLAY_ENV=$DISPLAY
    fi

    # Start xhost sharing
    xhost +local: > /dev/null 2>&1
    # Run docker
    if [ "$PERSISTENT" == "true" ]; then
        if [ -n "$(docker ps -a | grep $CONTAINERNAME)" ]; then
            # not the first run in the persistent case. just restore
            docker start -a $CONTAINERNAME
            exit 0
        fi
    fi
    # Launch docker container
    docker run -i -t $RM \
           -e DISPLAY=$DISPLAY_ENV \
           -v /tmp/.X11-unix:/tmp/.X11-unix:ro \
           $SHAREDDIRS \
           -w="/home/fenics" \
           --name="$CONTAINERNAME" \
           $IMAGE
    # End xhost sharing
    xhost - >/dev/null 2>&1
}

start_cli () {
    # Launch docker container
    if [ "$PERSISTENT" == "true" ]; then
        if [ -n "$(docker ps -a | grep $CONTAINERNAME)" ]; then
            # not the first run in the persistent case. just restore
            docker start -a $CONTAINERNAME
            exit 0
        fi
    fi    
    docker run -i -t $RM \
           $SHAREDDIRS \
           -w="/home/fenics" \
           --name="$CONTAINERNAME" \
           $IMAGE
}

# Launch
if [ "$GUI" == "true" ]; then
    start_gui
    exit 0
else
    start_cli
    exit 0
fi
