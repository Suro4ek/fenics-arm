#!/usr/bin/env bash
#
# This script wraps Docker commands to simplify the use of FEniCS Docker images.

# Config
IMAGE_HOST="quay.io/fenicsproject"
DEFAULT_IMAGE="stable"
CACHE_DIR_CONTAINER="/home/fenics/.instant"
PROJECT_DIR_HOST=$(pwd)
DEFAULT_COMMAND="/bin/bash -l"

# Set host cache dir
CACHE_DIR_HOST=$INSTANT_CACHE_DIR
: ${CACHE_DIR_HOST:="$HOME/.instant"}

# Setup
set -e
RED="\033[1;31m"
GREEN="\033[1;32m"
BLUE="\033[1;34m"
NORMAL="\033[0m"

help ()
{
    echo "Usage: fenicsproject <command> [options]"
    echo ""
    echo "  fenicsproject run [image] [command] - run a FEniCS session"
    echo "  fenicsproject create <name> [image] - create project with given name (tag)"
    echo "  fenicsproject start <name>          - start project with given name (tag)"
    echo ""
    echo "Use 'fenicsproject run' for simple (non-persistent) FEniCS sessions."
    echo "For persistent sessions, use 'create' followed by 'start' to (re)start a session."
    echo ""
    echo "Available images:"
    echo ""
    echo "  stable  - latest stable release [default]"
    echo "  dev     - latest development version, master branch"
    echo "  dev-env - development environment including dependencies but not FEniCS"
    echo ""
    echo "For more details and tips, see our FEniCS Docker page:"
    echo ""
    echo "  http://fenics-containers.readthedocs.org/en/latest/"
    echo ""
}

command ()
{
    echo "[$@]"
    echo ""
    $@
}

run ()
{
    # Create host cache directory
    mkdir -p $CACHE_DIR_HOST

    # Select image
    IMAGE="$1"
    : ${IMAGE:="$DEFAULT_IMAGE"}

    # Select command (if any)
    if [ $# -ge 2 ]; then
        shift
        COMMAND="$@"
        : ${COMMAND:="$DEFAULT_COMMAND"}
    fi

    # Run container
    CMD="docker run -ti \
           -v $CACHE_DIR_HOST:$CACHE_DIR_CONTAINER \
           -v $PROJECT_DIR_HOST:/home/fenics/shared \
           -w /home/fenics/shared \
           $IMAGE_HOST/$IMAGE $COMMAND"
    command $CMD
}

create ()
{
    NAME="$1"
    echo -e "Creating new ${GREEN}FEniCS Project${NORMAL} ${BLUE}$NAME${NORMAL}."
    echo ""

    # Create host cache directory
    mkdir -p $CACHE_DIR_HOST

    # Select image
    IMAGE="$2"
    : ${IMAGE:="$DEFAULT_IMAGE"}

    # Create the container
    CMD="docker create -ti --name $NAME \
           -v $CACHE_DIR_HOST:$CACHE_DIR_CONTAINER \
           -v $PROJECT_DIR_HOST:/home/fenics/shared \
           -w /home/fenics/shared \
           $IMAGE_HOST/$IMAGE $DEFAULT_COMMAND"
    command $CMD
    
    # Print summary
    echo ""
    echo -e "To ${BLUE}start the container${NORMAL}, type the following command:"
    echo ""
    echo "  fenicsproject start $NAME"
    echo ""
    echo "You will find the current working directory under ~/shared."
}

start ()
{
    NAME="$1"
    echo "Starting project named $NAME."

    # Start container
    CMD="docker start -ai $NAME"
    command $CMD
}

# Check command-line arguments
if [ "$1" == "run" ]; then
    run $2 $3
elif [ "$1" == "create" ]; then
    create $2 $3
elif [ "$1" == "start" ]; then
    start $2
else
    help
    exit 1
fi
